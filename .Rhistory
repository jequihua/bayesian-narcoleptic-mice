library("ggplot2")
library("brms")
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
### Duration of each BA (narcoleptic attack) model.
ba_seconds <- filter(data,behavior=="BA")
# Change variable types.
ba_seconds$group <- as.factor(ba_seconds$group)
ba_seconds$mouse <- as.factor(ba_seconds$mouse)
# Fit brms model for duration of each BA attack.
ba_seconds_fit <- brm(seconds ~ group + (1|mouse),
data = ba_seconds, family = lognormal(), control = list(adapt_delta = 0.999))
# Evaluate model fit.
summary(ba_seconds_fit)
brms::marginal_effects(ba_seconds_fit)
?pp_check
pp = brms::pp_check(ba_seconds_fit)
pp + theme_bw()
# List excel files.
exs = list.files("D:/work2/20181202_ana_discrete_ts/manual_scoring4/",
pattern="\\.xlsx",
full.names = TRUE)
# Load packages.
library("brms")
library("tidyverse")
library("ggplot2")
library("readxl")
library("data.table")
library("ggplot2")
library("dplyr")
tabls = list()
n=1
# Load files and bind them.
for (i in 1:length(exs)){
ex = exs[i]
nsheets = excel_sheets(ex)
for (j in 1:length(nsheets)){
read_ex=read_excel(ex,sheet=nsheets[j])
read_ex$group=strsplit(strsplit(exs[i],split="manual_scoring3/")[[1]][2],split="_no gaps\\.")[[1]][1]
read_ex$mouse=nsheets[j]
tabls[[n]]=read_ex
n=n+1
}
}
bigdf = as.data.frame(rbindlist(tabls,fill=TRUE))
names(bigdf)[2]="seconds"
write_csv(bigdf,"D:/repositories/bayesian-narcoleptic-mice/data/videos/recorded_behaviors.csv")
# Load packages.
library("tidyverse")
library("ggplot2")
library("brms")
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
### Duration of each BA (narcoleptic attack) model.
ba_seconds <- filter(data,behavior=="BA")
# Change variable types.
ba_seconds$group <- as.factor(ba_seconds$group)
ba_seconds$mouse <- as.factor(ba_seconds$mouse)
# Fit brms model for duration of each BA attack.
ba_seconds_fit <- brm(seconds ~ group + (1|mouse),
data = ba_seconds, family = lognormal(), control = list(adapt_delta = 0.999))
head(data)
# List excel files.
exs = list.files("D:/work2/20181202_ana_discrete_ts/manual_scoring4/",
pattern="\\.xlsx",
full.names = TRUE)
tabls = list()
n=1
# Load files and bind them.
for (i in 1:length(exs)){
ex = exs[i]
nsheets = excel_sheets(ex)
for (j in 1:length(nsheets)){
read_ex=read_excel(ex,sheet=nsheets[j])
read_ex$group=strsplit(strsplit(exs[i],split="manual_scoring3/")[[1]][2],split="_no gaps\\.")[[1]][1]
read_ex$mouse=nsheets[j]
tabls[[n]]=read_ex
n=n+1
}
}
# List excel files.
exs = list.files("D:/work2/20181202_ana_discrete_ts/manual_scoring4/",
pattern="\\.xlsx",
full.names = TRUE)
exs = exs[1:4]
exs
tabls = list()
n=1
# Load files and bind them.
for (i in 1:length(exs)){
ex = exs[i]
nsheets = excel_sheets(ex)
for (j in 1:length(nsheets)){
read_ex=read_excel(ex,sheet=nsheets[j])
read_ex$group=strsplit(strsplit(exs[i],split="manual_scoring3/")[[1]][2],split="_no gaps\\.")[[1]][1]
read_ex$mouse=nsheets[j]
tabls[[n]]=read_ex
n=n+1
}
}
bigdf = as.data.frame(rbindlist(tabls,fill=TRUE))
names(bigdf)[2]="seconds"
write_csv(bigdf,"D:/repositories/bayesian-narcoleptic-mice/data/videos/recorded_behaviors.csv")
# Load packages.
library("tidyverse")
library("ggplot2")
library("brms")
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
head(data)
### Duration of each BA (narcoleptic attack) model.
ba_seconds <- filter(data,behavior=="BA")
# Change variable types.
ba_seconds$group <- as.factor(ba_seconds$group)
ba_seconds$mouse <- as.factor(ba_seconds$mouse)
# Fit brms model for duration of each BA attack.
ba_seconds_fit <- brm(seconds ~ group + (1|mouse),
data = ba_seconds, family = lognormal(), control = list(adapt_delta = 0.999))
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
head(data)
View(data)
# List excel files.
exs = list.files("D:/work2/20181202_ana_discrete_ts/manual_scoring4/",
pattern="\\.xlsx",
full.names = TRUE)
exs = exs[1:4]
exs
tabls = list()
n=1
# Load files and bind them.
for (i in 1:length(exs)){
ex = exs[i]
nsheets = excel_sheets(ex)
for (j in 1:length(nsheets)){
read_ex=read_excel(ex,sheet=nsheets[j])
read_ex$group=strsplit(strsplit(exs[i],split="manual_scoring3/")[[1]][2],split="_no gaps\\.")[[1]][1]
read_ex$mouse=nsheets[j]
tabls[[n]]=read_ex
n=n+1
}
}
bigdf = as.data.frame(rbindlist(tabls,fill=TRUE))
head(bigdf)
# List excel files.
exs = list.files("D:/work2/20181202_ana_discrete_ts/manual_scoring4/",
pattern="\\.xlsx",
full.names = TRUE)
exs = exs[1:4]
exs
tabls = list()
n=1
# Load files and bind them.
for (i in 1:length(exs)){
ex = exs[i]
nsheets = excel_sheets(ex)
for (j in 1:length(nsheets)){
read_ex=read_excel(ex,sheet=nsheets[j])
read_ex$group=strsplit(strsplit(exs[i],split="manual_scoring4/")[[1]][2],split="_no gaps\\.")[[1]][1]
read_ex$mouse=nsheets[j]
tabls[[n]]=read_ex
n=n+1
}
}
bigdf = as.data.frame(rbindlist(tabls,fill=TRUE))
names(bigdf)[2]="seconds"
head(bigdf)
write_csv(bigdf,"D:/repositories/bayesian-narcoleptic-mice/data/videos/recorded_behaviors.csv")
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
View(data)
### Duration of each BA (narcoleptic attack) model.
ba_seconds <- filter(data,behavior=="BA")
# Change variable types.
ba_seconds$group <- as.factor(ba_seconds$group)
ba_seconds$mouse <- as.factor(ba_seconds$mouse)
# Fit brms model for duration of each BA attack.
ba_seconds_fit <- brm(seconds ~ group + (1|mouse),
data = ba_seconds, family = lognormal(), control = list(adapt_delta = 0.999))
# Evaluate model fit.
summary(ba_seconds_fit)
pp = brms::pp_check(ba_seconds_fit)
pp + theme_bw()
brms::marginal_effects(ba_seconds_fit)
oad packages.
library("tidyverse")
library("ggplot2")
library("brms")
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
# Available number of hours-data per mice table.
mice_totalhours <- group_by(data,mouse) %>%
summarise(totaltime = sum(seconds)/3600)
# Join data and mice_hours.
data <- right_join(data,mice_totalhours,by="mouse")
### Total number of BA (narcoleptic attacks) cases model per hour.
ba_counts <- data %>%
mutate(mouse=paste0(group," ",mouse)) %>%
group_by(mouse) %>%
summarise(BA_counts = sum(behavior == "BA"),hours=min(totaltime)) %>%
mutate(BA_counts_hour=BA_counts/hours) %>%
separate(mouse,c("group","mouse"))
head(ba_counts)
# Change variable types.
ba_counts$group <- as.factor(ba_counts$group)
ba_counts$mouse <- as.factor(ba_counts$mouse)
# Fit brms model for absolute number of BA attacks per hour.
ba_counts_fit <- brm(BA_counts_hour ~ group + (1|mouse),
data = ba_counts, family = lognormal(), control = list(adapt_delta = 0.9999,max_treedepth=15))
# Evaluate model fit.
summary(ba_counts_fit)
plot(ba_counts_fit)
pp + theme_bw()
brms::marginal_effects(ba_counts_fit)
# Total hours of sampling by mouse.
mice_totalseconds <- group_by(data,mouse) %>%
summarise(totaltime = sum(seconds))
# Join data and mice_hours.
data <- right_join(data,mice_totalseconds,by="mouse")
head(data)
ba_percentage <- filter(data,behavior=="BA") %>%
mutate(mouse=paste0(group," ",mouse)) %>%
group_by(mouse) %>%
summarise(BA_totaltime = sum(seconds),hours=min(totaltime)) %>%
mutate(percentage_time_BA=(BA_totaltime/hours)*100) %>%
separate(mouse,c("group","mouse"))
View(ba_percentage)
# Change variable types.
ba_totaltime$group <- as.factor(ba_totaltime$group)
ba_totaltime$mouse <- as.factor(ba_totaltime$mouse)
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.9999,max_treedepth = 15))
# Evaluate model fit.
summary(ba_totaltime_fit)
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
brms::marginal_effects(ba_totaltime_fit)
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = gamma(), control = list(adapt_delta = 0.9999,max_treedepth = 15))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = Gamma(), control = list(adapt_delta = 0.9999,max_treedepth = 15))
# Evaluate model fit.
summary(ba_totaltime_fit)
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = exponential(), control = list(adapt_delta = 0.9999,max_treedepth = 15))
# Evaluate model fit.
summary(ba_totaltime_fit)
plot(ba_totaltime_fit)
pairs(ba_totaltime_fit)
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 13))
# Evaluate model fit.
summary(ba_totaltime_fit)
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14))
hist(ba_totaltime$BA_totaltime)
?hist
hist(ba_totaltime$BA_totaltime,breaks=100)
hist(ba_totaltime$BA_totaltime,breaks=30)
hist(ba_totaltime$BA_totaltime,breaks=10)
hist(ba_totaltime$BA_totaltime,breaks=50)
hist(ba_totaltime$BA_totaltime,breaks=15)
hist(ba_totaltime$BA_totaltime,breaks=10)
# Load recorded behaviors data.
data <- read_csv("./data/videos/recorded_behaviors.csv")
### Duration of each BA (narcoleptic attack) model.
ba_seconds <- filter(data,behavior=="BA")
# Change variable types.
ba_seconds$group <- as.factor(ba_seconds$group)
ba_seconds$mouse <- as.factor(ba_seconds$mouse)
# Fit brms model for duration of each BA attack.
ba_seconds_fit <- brm(seconds ~ group + (1|mouse),
data = ba_seconds, family = lognormal(), control = list(adapt_delta = 0.999))
# Evaluate model fit.
summary(ba_seconds_fit)
pp = brms::pp_check(ba_seconds_fit)
pp + theme_bw()
min(ba_seconds$seconds)
?brm
prior<- c(set_prior("student_t(3, 10, 1)", class = "Intercept"),
set_prior("student_t(3, 0, 5)", class = "b"),
set_prior("student_t(3,0,  5)", class = "sd"))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = weibull(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (1|mouse),
data = ba_percentage, family = exponential(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
# Evaluate model fit.
summary(ba_totaltime_fit)
brms::marginal_effects(ba_totaltime_fit)
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
# Which priors can we specify for our model?
get_prior(percentage_time_BA ~ group + (1|mouse), data=ba_percentage)
ba_totaltime_fit <- brm(percentage_time_BA ~ 0 + group + (0 + group | mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
ba_totaltime_fit <- brm(percentage_time_BA ~ 0 + group + (0 + group | mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14))
# Evaluate model fit.
summary(ba_totaltime_fit)
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14))
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
# Which priors can we specify for our model?
get_prior(percentage_time_BA ~ group + (1|mouse), data=ba_percentage)
prior <- c(set_prior("normal(0,1)", class = "b"),
set_prior("normal(0,1)", class = "b", coef = "groupsham"),
set_prior("normal(0,1)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,1)", class = "b", coef = "grouptxox"),
set_prior("student_t(3, 0, 5)", class = "b"),
set_prior("student_t(3,0,  5)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  5)", class = "sd")))
prior <- c(set_prior("normal(0,1)", class = "b"),
set_prior("normal(0,1)", class = "b", coef = "groupsham"),
set_prior("normal(0,1)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,1)", class = "b", coef = "grouptxox"),
set_prior("student_t(3, 0, 5)", class = "b"),
set_prior("student_t(3,0,  5)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  5)", class = "sd"))
# Which priors can we specify for our model?
get_prior(percentage_time_BA ~ group + (1|mouse), data=ba_percentage,prior=prior)
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
prior <- c(set_prior("normal(0,1)", class = "b"),
set_prior("normal(0,1)", class = "b", coef = "groupsham"),
set_prior("normal(0,1)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,1)", class = "b", coef = "grouptxox"),
set_prior("student_t(3,0,  5)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  5)", class = "sd"))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
pp = brms::pp_check(ba_totaltime_fit)
pp + theme_bw()
prior <- c(set_prior("normal(0,2)", class = "b"),
set_prior("normal(0,2)", class = "b", coef = "groupsham"),
set_prior("normal(0,2)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,2)", class = "b", coef = "grouptxox"),
set_prior("student_t(3,0,  1)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  1)", class = "sd"))
prior <- c(set_prior("normal(0,1.5)", class = "b"),
set_prior("normal(0,1.5)", class = "b", coef = "groupsham"),
set_prior("normal(0,1.5)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,1.5)", class = "b", coef = "grouptxox"),
set_prior("student_t(3,0,  1)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  1)", class = "sd"))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 14),
prior=prior)
# Evaluate model fit.
summary(ba_totaltime_fit)
prior <- c(set_prior("normal(0,1)", class = "b"),
set_prior("normal(0,1)", class = "b", coef = "groupsham"),
set_prior("normal(0,1)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,1)", class = "b", coef = "grouptxox"),
set_prior("student_t(3,0,  1)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  1)", class = "sd"))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 15),
prior=prior)
prior <- c(set_prior("normal(0,5)", class = "b"),
set_prior("normal(0,5)", class = "b", coef = "groupsham"),
set_prior("normal(0,5)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,5)", class = "b", coef = "grouptxox"),
set_prior("student_t(3,0,  1)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  1)", class = "sd"))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 15),
prior=prior)
prior <- c(set_prior("student_t(3, 5, 10)", class = "b"),
set_prior("normal(0,5)", class = "b", coef = "groupsham"),
set_prior("normal(0,5)", class = "b", coef = "grouptxcb"),
set_prior("normal(0,5)", class = "b", coef = "grouptxox"),
set_prior("student_t(3,0,  1)", class = "sd",
group = "mouse", coef = "Intercept"),
set_prior("student_t(3,0,  1)", class = "sd"))
# Fit brms model for total time spent in BA state.
ba_totaltime_fit <- brm(percentage_time_BA ~ group + (group|mouse),
data = ba_percentage, family = lognormal(), control = list(adapt_delta = 0.99999,max_treedepth = 15),
prior=prior)
library(tidyverse)
library(PKPDmodels)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
mutate(Subject = as.integer(Subject)) %>%
mutate(ConcMgPerL = conc + 1e-3) %>% select(-conc) %>%
arrange(Subject, Time)
install.packages("PKPDmodels")
library(tidyverse)
library(PKPDmodels)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
mutate(Subject = as.integer(Subject)) %>%
mutate(ConcMgPerL = conc + 1e-3) %>% select(-conc) %>%
arrange(Subject, Time)
Theoph
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
mutate(Subject = as.integer(Subject)) %>%
mutate(ConcMgPerL = conc + 1e-3) %>% select(-conc) %>%
arrange(Subject, Time)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
# get measurements for only the first patient and plot
theoph.1 <- theoph %>% filter(Subject == 1)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
# get measurements for only the first patient and plot
theoph.1 <- theoph %>% filter(Subject == 1)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble
theoph
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
mutate(Subject = as.integer(Subject))
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
mutate(Subject = as.integer(Subject)) %>%
mutate(ConcMgPerL = conc + 1e-3) %>%
select(-conc)
# basic data wrangling
# get the dose amount and concentrations in the proper units
# add tiny constant to conc. so we can take log of zero values
theoph <- Theoph %>%
as_tibble %>%
mutate(DoseMassMg = Dose * Wt) %>%
mutate(Subject = as.integer(Subject)) %>%
mutate(ConcMgPerL = conc + 1e-3) %>%
dplyr::select(-conc) %>%
arrange(Subject, Time)
head(theoph)
# get measurements for only the first patient and plot
theoph.1 <- theoph %>% filter(Subject == 1)
theoph.1 %>% ggplot(aes(Time, ConcMgPerL)) +
geom_point() +
geom_line()
install.packages("rstan")
install.packages("rstan")
